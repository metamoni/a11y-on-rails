<h1>Accessible form validation</h1>

<nav aria-label="Page contents menu">
  <h2>Contents</h2>
  <ol>
    <li><a href="#validations-problem">The problem</a></li>
    <li><a href="#validations-html">Validation with HTML</a></li>
    <li><a href="#validations-demo">Screen reader testing</a></li>
    <li><a href="#validations-custom">Custom form validation</a></li>
    <li><a href="#validations-resources">Resources</a></li>
  </ol>
</nav>

<article aria-labelledby="validations-problem">
  <h2 id="validations-problem">The problem</h2>

  <p>Validation errors communicate important information to your users. HTML offers some basic input validation that works with screen readers, but most apps call for something a bit more sophisticated. ARIA live regions allow you to expose dynamic page changes to assistive tech users, either through <code>aria-live</code> or live region <code>roles</code>.</p>
</article>

<article class="mb-4" aria-labelledby="validations-html">
  <h2 id="validations-html">Validation with HTML</h2>

  <p>The form below uses native HTML validation by adding the <code>required</code> attribute to the field. The screen reader announces the error automatically, without any other effort on our part.</p>

  <script src="https://gist.github.com/metamoni/7271f64a33d3c7cdce94c7ad5ef29206.js"></script>

  <p>Here's the form generated by the code above. Test this with a screen reader to hear how it announces the validation message.</p>

  <div class="code-sample-container">
    <%= form_for :product do |f| %>
      <%= f.label :product_name, "Product name" %>
      <%= f.text_field :product_name, required: true %>
      <%= f.submit "Save" %>
    <% end %>
  </div>
</article>

<article class="tip-container mb-2" aria-labelledby="validations-demo">
  <h2 class="tip-title" id="validations-demo">Try it yourself</h2>
  <p>If you're on a Mac you can test this with VoiceOver. Press <code>cmd + F5</code> to turn it on, then try to submit the form without filling out the input. You should hear the screen reader announce the validation error.</p>
</article>

<article aria-labelledby="validations-custom">
  <h2 id="validations-custom">Custom form validation</h2>
  <p>If you're writing your own validation errors you need to make sure that they're accessible to screen readers too. In most cases, adding <code>aria-live="polite"</code> to the markup containing your error message should suffice. This allows the screen reader to finish any ongoing announcements, then read read out the error message.</p>
  
  <p>The example below is taken from <%= link_to "dev.to", "https://github.com/forem/forem/blob/5e93d3a25ecc800703aa100d286c8c75c9173ddf/app/views/users/edit.html.erb#L63" %>. When the user's email is blank, a series of custom validation errors are announced.</p>

  <script src="https://gist.github.com/metamoni/5c84bf7af6a009c01a72630c6f1320be.js"></script>

  <p>A few lines below, another example uses <code>role="alert"</code>. Just like <code>aria-live="assertive"</code>, this interrupts any current announcements and immediately reads out the error. Because this approach can be disruptive and annoying, it should only be used for critical or time-sensitive notifications.</p>

  <script src="https://gist.github.com/metamoni/19dd7c8d6335434096b2a91beffde25c.js"></script>
<article>

<section class="mb-2">
  <h2 id="validations-resources">Resources</h2>
  <ul>
    <li><a href="https://github.com/forem/forem/blob/5e93d3a25ecc800703aa100d286c8c75c9173ddf/app/views/users/edit.html.erb#L63">Code sample from Forem</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions">MDN - ARIA live regions</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#4._live_region_roles">MDN - Live region roles</a></li>
  </ul>
</section>

<%= render 'shared/back_link' %>
